
A rotated sorted array is an array that was initially sorted in ascending (or descending) order and then rotated (shifted) at 
some pivot point so that elements after the pivot move to the beginning and those before the pivot move to the end
Efficient way to rotate at pivot k

1. Example Input/Output
Input (sorted array):
[10, 20, 30, 40, 50]

Input (rotated at pivot 2 [30]):
[40, 50, 10, 20, 30]

2. Another Example
Input (sorted array):
[1, 2, 3, 4, 5, 6]

Input (rotated at pivot 4 [5]):
[6, 1, 2, 3, 4, 5]

void rotateArray(int[] arr, int k) {
    int n = arr.length;
    // Step 1: Reverse the first part (0 to k)
    reverse(arr, 0, k);
    // Step 2: Reverse the second part (k+1 to n-1)
    reverse(arr, k+1, n-1);
    // Step 3: Reverse the whole array (0 to n-1)
    reverse(arr, 0, n-1);
}

void reverse(int[] arr, int start, int end) {
    while(start < end) {
        int temp = arr[start];
        arr[start] = arr[end];
        arr[end] = temp;
        start++;
        end--;
    }
}

